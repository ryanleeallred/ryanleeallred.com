{"version":3,"file":"component---src-pages-index-js.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <h1 class=\"main-heading\">\n        <Link className=\"header-link-home\" to=\"/\">\n          {title}\n        </Link>\n      </h1>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <div className=\"header-border\"></div>\n      <div className=\"content-wrapper\">\n        <main>{children}</main>\n      </div>\n      {/* <footer>\n        <div className='copyright'>\n          RyanAllred.ai Â© {new Date().getFullYear()}\n        </div>\n      </footer> */}\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\n// import Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        {/* <Bio /> */}\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      {/* <Bio /> */}\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <div className=\"title-row\">\n                    <h2 className=\"post-title\">\n                      <Link to={post.fields.slug} itemProp=\"url\">\n                        <span itemProp=\"headline\">{title}</span>\n                      </Link>\n                    </h2>\n                    <ul className=\"tag-list\">\n                      {post.frontmatter.tags.map(tag => {\n                        let tag_color = \"\"\n                        switch (tag) {\n                          case \"Outside My Door\":\n                            tag_color = \"#308ee2\"\n                            break\n                          case \"Code Challenge\":\n                            tag_color = \"#FFA116\"\n                            break\n                          default:\n                            tag_color = \"#7B58FE\"\n                        }\n                        return (\n                          <li\n                            className=\"tag-list-item\"\n                            style={{ backgroundColor: tag_color }}\n                          >\n                            <Link className=\"tag-link\" to={`/tags/${tag}`}>\n                              {tag}\n                            </Link>\n                          </li>\n                        )\n                      })}\n                    </ul>\n                  </div>\n                  <small className=\"post-date\">{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`\n"],"names":["React","Link","Layout","location","title","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","createElement","className","to","class","PropTypes","Helmet","useStaticQuery","Seo","description","lang","meta","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","site","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","propTypes","string","arrayOf","object","isRequired","BlogIndex","data","_data$site$siteMetada","siteTitle","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","tags","tag","tag_color","backgroundColor","date","dangerouslySetInnerHTML","__html","excerpt","pageQuery"],"sourceRoot":""}