{"version":3,"file":"component---src-pages-index-js.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <h1 class=\"main-heading\">\n        <Link className=\"header-link-home\" to=\"/\">\n          {title}\n        </Link>\n      </h1>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <div className=\"header-border\"></div>\n      <div className=\"content-wrapper\">\n        <main>{children}</main>\n      </div>\n      {/* <footer>\n        <div className='copyright'>\n          RyanAllred.ai Â© {new Date().getFullYear()}\n        </div>\n      </footer> */}\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\n// import Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        {/* <Bio /> */}\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      {/* <Bio /> */}\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <div className=\"title-row\">\n                    <h2 className=\"post-title\">\n                      <Link to={post.fields.slug} itemProp=\"url\">\n                        <span itemProp=\"headline\">{title}</span>\n                      </Link>\n                    </h2>\n                    <ul className=\"tag-list\">\n                      {post.frontmatter.tags.map(tag => {\n                        let tag_color = \"\"\n                        switch (tag) {\n                          case \"Outside My Door\":\n                            tag_color = \"#308ee2\"\n                            break\n                          case \"Code Challenge\":\n                            tag_color = \"#FFA116\"\n                            break\n                          default:\n                            tag_color = \"#7B58FE\"\n                        }\n                        return (\n                          <li\n                            className=\"tag-list-item\"\n                            style={{ backgroundColor: tag_color }}\n                          >\n                            <Link className=\"tag-link\" to={`/tags/${tag}`}>\n                              {tag}\n                            </Link>\n                          </li>\n                        )\n                      })}\n                    </ul>\n                  </div>\n                  <small className=\"post-date\">{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`\n"],"names":["React","Link","Layout","location","title","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","createElement","className","to","class","PropTypes","Helmet","Seo","description","lang","meta","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","site","staticQueryData","data","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","propTypes","string","arrayOf","object","isRequired","BlogIndex","_data$site$siteMetada","siteTitle","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","tags","tag","tag_color","backgroundColor","date","dangerouslySetInnerHTML","__html","excerpt","pageQuery"],"sourceRoot":""}