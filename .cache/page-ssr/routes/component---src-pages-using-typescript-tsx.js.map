{"version":3,"file":"component---src-pages-using-typescript-tsx.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <Seo title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <h1 class=\"main-heading\">\n        <Link className=\"header-link-home\" to=\"/\">\n          {title}\n        </Link>\n      </h1>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <div className=\"header-border\"></div>\n      <div className=\"content-wrapper\">\n        <main>{children}</main>\n      </div>\n      {/* <footer>\n        <div className='copyright'>\n          RyanAllred.ai Â© {new Date().getFullYear()}\n        </div>\n      </footer> */}\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["React","Link","Layout","Seo","UsingTypescript","data","path","location","title","site","buildTime","href","to","query","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","createElement","className","class","PropTypes","Helmet","description","lang","meta","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","staticQueryData","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","propTypes","string","arrayOf","object","isRequired"],"sourceRoot":""}